<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<bean id="yamlProperties" class="org.springframework.beans.factory.config.YamlPropertiesFactoryBean">
		<property name="resources" value="classpath:application.yml"/>
	</bean>

	<!--装载配置文件
	location：表示属性文件位置，多个之间通过如 逗号(,)/分号(;)等分隔；
	file-encoding：文件编码；
	ignore-resource-not-found：如果属性文件找不到，是否忽略，默认false，即不忽略，找不到将抛出异常；
	ignore-unresolvable：是否忽略解析不到的属性，如果不忽略，找不到将抛出异常；
	properties-ref：本地java.util.Properties配置；
	local-override：是否本地覆盖模式，即如果true，那么properties-ref的属性将覆盖location加载的属性；
	system-properties-mode：系统属性模式，ENVIRONMENT（默认），OVERRIDE，NEVER
	ENVIRONMENT：将使用Spring 3.1提供的PropertySourcesPlaceholderConfigurer，其他情况使用Spring 3.1之前的PropertyPlaceholderConfigurer如果是本地覆盖模式：那么查找顺序是：properties-ref、location、environment，否则正好反过来；
	OVERRIDE： PropertyPlaceholderConfigurer使用，因为在spring 3.1之前版本是没有Enviroment的，所以OVERRIDE是spring 3.1之前版本的Environment如果是本地覆盖模式：那么查找顺序是：properties-ref、location、System.getProperty(),System.getenv()，否则正好反过来；
	NEVER：只查找properties-ref、location；
	order：当配置多个context:property-placeholder/查找顺序；

	-->
	<context:property-placeholder properties-ref="yamlProperties" location="classpath:application.properties"/>

	<bean class="org.springframework.luna.domain.xml.User" id="user" name="custom_luna_user">
		<property name="name" value="${luna.user.config}"/>
	</bean>

	<bean class="org.springframework.luna.domain.xml.Phone" name="phone" init-method="init" destroy-method="destroy">
		<property name="number" value="${luna.phone.number}"/>
	</bean>

	<bean class="org.springframework.luna.domain.xml.UserFactoryBean" id="userFactoryBean"/>

	<!--包扫描-->
	<context:component-scan base-package="org.springframework.luna.domain.xml"
							name-generator="org.springframework.luna.componentscan.MyCustomBeanNameGenerator"/>

</beans>
